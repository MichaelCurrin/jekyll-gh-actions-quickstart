{"0": {
    "doc": "About",
    "title": "Using a new Jekyll version",
    "content": "Likebmost Jekyll sites, this one uses a homepage (the index.md page), a Gemfile, and a config file. But, there are limitations of the GitHub Pages environment - you cannot use Jekyll 4 or non-standard gems (your Gemfile is ignored) and you cannot add Python, Node, Hugo, etc. to your build flow. To overcome these limitations, this template project uses a GitHub Actions workflow. Allowing you to specify Jekyll 4 and other gems you want. And use other steps like compiling assets with Node. ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/about.html#using-a-new-jekyll-version",
    "relUrl": "/about.html#using-a-new-jekyll-version"
  },"1": {
    "doc": "About",
    "title": "GitHub Actions setup",
    "content": "See main.yml workflow file. That uses some generic Actions, to avoid relying into an over-specialized complex Action that does too much (like many other there that do Ruby, Jekyll, building, and deploying). The generic steps mean it is easy to see exactly what the steps are doing and to modify the flow. Plus, you can reuse the steps for other projects such as deploying a React site to GH Pages. On a commit to the main branch, the CI will do the following: . | Set up the environment. | Build the site. | Commit the build output to the repo’s gh-pages branch. | . Then that output is served as a static site, since GitHub Pages is enabled in Settings. The CI actually will also run on a PR against the main branch too - it will just skip the last part of committing to the gh-pages branch. So you can still use the CI to test your tests and build flow works correctly, without accidentally publishing your feature branch as a deployed site. See Actions section on the repo for logs of job runs. ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/about.html#github-actions-setup",
    "relUrl": "/about.html#github-actions-setup"
  },"2": {
    "doc": "About",
    "title": "Theme",
    "content": "A theme is set up in the Gemfile and _config.yml files. You can use any Jekyll theme you want - as long as it is compatible with Jekyll 4. The just-the-docs Jekyll theme was chosen for this project, as it gives a lot of functionality without you having to write HTML and CSS, so you can focus on writing in markdown. The theme focuses on presenting content for a documentation website - so it is ideal if you have code in a repo and want to host a docs site for it without writing a lot of code. To keep your docs separate from your app code, your docs site might be in a docs subdirectory, a docs branch (still building to gh-pages or a separate repo. ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/about.html#theme",
    "relUrl": "/about.html#theme"
  },"3": {
    "doc": "About",
    "title": "About",
    "content": " ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/about.html",
    "relUrl": "/about.html"
  },"4": {
    "doc": "Create your own",
    "title": "Create your own",
    "content": "Get a copy of this template project which you can easily run and host on your GitHub account. | Click this button. | . | Go to your repo’s Actions tab and wait for the first workflow to pass. | Check your gh-pages branch which was created and see that it has a some static HTML files and assets in it. | Go to your repo’s Settings. | Enable a GitHub Pages site on the root path of the gh-pages branch. | Go to the Environment section on the right of repo to check the status of the build. | When it is done, click View Deployment to open your site URL. | . Then you can customize the config, theme, plugins, etc. as you need to. The Just The Docs theme picks up files automatically and adds them to the navbar, so if you are happy with alphabetical menu, then so you don’t have to worry about configuring a navbar. You can also set a custom ordering using nav_order: 1 to put the page first, as such as homepage. ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/create-your-own.html",
    "relUrl": "/create-your-own.html"
  },"5": {
    "doc": "Home",
    "title": "Home",
    "content": ". Welcome to Jekyll GH Actions Quickstart project - a template, demo and tutorial. This site acts a demo of a site build with Jekyll 4, GitHub Actions and the just-the-docs Jekyll theme. The pages here also provide guidance on how and why this setup was made and how to get your own copy of this template so you can deploy too. Source code: . ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/",
    "relUrl": "/"
  },"6": {
    "doc": "Local setup",
    "title": "Local setup",
    "content": "This project is not intended to be run locally with a dev server. As the focus on is on content and letting the theme take care of all the appearance and templating concerns. But, if you do want to run this locally, such as for faster debugging and experimenting, I recommend following instructions and setup steps on this project: . | . It covers installing Ruby, Bundle and project gems locally (including Jekyll). It has a Gemfile which you can use to get started. Though, that uses the standard GH Pages and Jekyll 3.9 approach. And also without GH Actions. ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/local-setup.html",
    "relUrl": "/local-setup.html"
  },"7": {
    "doc": "Resources",
    "title": "Resources",
    "content": "If you want to learn how about the tools and services used to make this project, see the links below. | Jekyll resources. | A static site generator which uses markdown or HTML content and allows use of themes. | . | GitHub Actions resources. | Including links to the officials docs and my blog posts own getting started with GH Actions. Plus there are links to my cookbook and cheatsheets so you can learn more about GitHub Actions - solving a variety of cased around Jekyll, Node, Python and more. | . | GitHub Pages resources. | For hosting your static website. | . | Just The Docs theme on RubyGems | . I also wrote a tutorial on the Jekyll around using GitHub Actions. So check that out for more info on how this template works. The main difference is that the tutorial uses a Jekyll-specific action while this template project uses a more generic but easy Ruby-based flow. | CI/CD - GitHub Actions | . If you are interested in seeing more Jekyll projects, have a look here. This is based on the Jekyll CLI quickstart but doesn’t use GH Actions. | jekyll-blog-demo | . ",
    "url": "https://michaelcurrin.github.io/jekyll-gh-actions-quickstart/resources.html",
    "relUrl": "/resources.html"
  }
}
